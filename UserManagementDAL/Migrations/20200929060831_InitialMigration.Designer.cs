// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementDAL;

namespace UserManagementDAL.Migrations
{
    [DbContext(typeof(UserManagementDbContext))]
    [Migration("20200929060831_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserManagementEntities.AuditLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<DateTime>("CurrentDate");

                    b.Property<string>("Logs")
                        .HasColumnType("xml");

                    b.Property<string>("TableName");

                    b.Property<int>("Usersid");

                    b.HasKey("Id");

                    b.HasIndex("Usersid");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("UserManagementEntities.RolePermissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Permission");

                    b.Property<int>("RolesId");

                    b.HasKey("Id");

                    b.HasIndex("RolesId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("UserManagementEntities.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Createdon");

                    b.Property<DateTime>("LastModifiedon");

                    b.Property<string>("Role");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("UserManagementEntities.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RolesId");

                    b.Property<int>("Usersid");

                    b.HasKey("Id");

                    b.HasIndex("RolesId");

                    b.HasIndex("Usersid");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("UserManagementEntities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("Age");

                    b.Property<DateTime>("Createdon");

                    b.Property<DateTime>("DateofBirth");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<DateTime>("LastModifiedon");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserManagementEntities.AuditLogs", b =>
                {
                    b.HasOne("UserManagementEntities.Users")
                        .WithMany("AuditLogs")
                        .HasForeignKey("Usersid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UserManagementEntities.RolePermissions", b =>
                {
                    b.HasOne("UserManagementEntities.Roles")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UserManagementEntities.UserRoles", b =>
                {
                    b.HasOne("UserManagementEntities.Roles")
                        .WithMany("UserRoles")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UserManagementEntities.Users")
                        .WithMany("UserRoles")
                        .HasForeignKey("Usersid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
